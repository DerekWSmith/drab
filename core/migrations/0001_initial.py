# Generated by Django 4.2.21 on 2025-06-04 01:13

import core.models.ItemAttachment
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('publish_until', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referenced_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('effort_minutes', models.PositiveIntegerField(default=0, help_text='Estimated total effort in minutes')),
                ('slack_minutes', models.PositiveIntegerField(default=0, help_text='Buffer time in minutes')),
                ('duration_minutes', models.PositiveIntegerField(default=60, help_text='Base duration excluding slack')),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(default='pending', help_text='Status of the task (e.g., pending, in_progress, blocked, completed)', max_length=50)),
                ('priority', models.PositiveIntegerField(default=3, help_text='Priority from 1 (high) to 5 (low)')),
                ('start_date', models.DateField(blank=True, help_text='Scheduled or actual start date', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp when task was completed', null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for this task', max_length=255)),
                ('category', models.CharField(blank=True, help_text='Optional task category', max_length=100)),
                ('change_log', models.TextField(blank=True, help_text='Optional log of task changes')),
                ('estimated_start', models.DateField(blank=True, help_text='Estimated start date', null=True)),
                ('estimated_end', models.DateField(blank=True, help_text='Estimated end date', null=True)),
                ('actual_start', models.DateField(blank=True, help_text='Actual start date', null=True)),
                ('actual_end', models.DateField(blank=True, help_text='Actual end date', null=True)),
                ('activities', models.ManyToManyField(blank=True, related_name='%(class)s_related_items', to='core.activity')),
                ('admins', models.ManyToManyField(blank=True, related_name='%(class)s_administers_items', to=settings.AUTH_USER_MODEL)),
                ('blocked_by', models.ManyToManyField(blank=True, related_name='blocks', to='core.activity')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created the task', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities_created', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL)),
                ('next_responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_next_responsible_items', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='Primary owner of the task', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_tasks', to=settings.AUTH_USER_MODEL)),
                ('pre_requisites', models.ManyToManyField(blank=True, related_name='unlock_tasks', to='core.activity')),
                ('previous', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_superseded_by', to='core.activity')),
                ('requisites', models.ManyToManyField(blank=True, related_name='complete_with_tasks', to='core.activity')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_responsible_items', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, help_text='Person reviewing this task', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_tasks', to=settings.AUTH_USER_MODEL)),
                ('subscribers', models.ManyToManyField(related_name='%(class)s_subscribed_items', to=settings.AUTH_USER_MODEL)),
                ('team', models.ManyToManyField(blank=True, related_name='allocated_team', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the task', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ItemActivities',
            },
        ),
        migrations.CreateModel(
            name='ResponsibilityQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('completed', models.BooleanField(default=False)),
                ('notes', models.TextField()),
                ('timestamp_completed', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveIntegerField()),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ItemSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('last_read', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('publish_until', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referenced_at', models.DateTimeField(auto_now=True)),
                ('resolution', models.CharField(max_length=255)),
                ('adopted_date', models.DateTimeField(auto_now_add=True)),
                ('quorum', models.PositiveIntegerField(default=1)),
                ('tags', models.CharField(db_index=True, default='', max_length=250)),
                ('activities', models.ManyToManyField(blank=True, related_name='%(class)s_related_items', to='core.activity')),
                ('admins', models.ManyToManyField(blank=True, related_name='%(class)s_administers_items', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL)),
                ('mandatory_voters', models.ManyToManyField(blank=True, related_name='mandatory_vote_decisions', to=settings.AUTH_USER_MODEL)),
                ('next_responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_next_responsible_items', to=settings.AUTH_USER_MODEL)),
                ('previous', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_superseded_by', to='core.decision')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_responsible_items', to=settings.AUTH_USER_MODEL)),
                ('subscribers', models.ManyToManyField(related_name='%(class)s_subscribed_items', to=settings.AUTH_USER_MODEL)),
                ('veto_group', models.ManyToManyField(blank=True, related_name='veto_decisions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ItemDecisions',
            },
        ),
        migrations.CreateModel(
            name='Brief',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('publish_until', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referenced_at', models.DateTimeField(auto_now=True)),
                ('summary', models.CharField(max_length=255)),
                ('activities', models.ManyToManyField(blank=True, related_name='%(class)s_related_items', to='core.activity')),
                ('admins', models.ManyToManyField(blank=True, related_name='%(class)s_administers_items', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL)),
                ('next_responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_next_responsible_items', to=settings.AUTH_USER_MODEL)),
                ('previous', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_superseded_by', to='core.brief')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_responsible_items', to=settings.AUTH_USER_MODEL)),
                ('subscribers', models.ManyToManyField(related_name='%(class)s_subscribed_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ItemBriefs',
            },
        ),
        migrations.CreateModel(
            name='ItemAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(db_index=True)),
                ('file', models.FileField(upload_to='core.models.ItemAttachment.ItemAttachment_upload_to')),
                ('filename', models.CharField(max_length=255)),
                ('is_original', models.BooleanField(default=False)),
                ('version', models.PositiveIntegerField(default=1)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'item_attachments',
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='item_attach_content_7da7cd_idx')],
            },
        ),
    ]
